/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlyktx.view.Admin;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import quanlyktx.DAO.DAO;
import quanlyktx.model.HoaDon;
import quanlyktx.model.PS_Phong;
import quanlyktx.model.PhatSinh;
import quanlyktx.model.Phong;

/**
 *
 * @author luong
 */
public class ThemPhatSinhPhong extends javax.swing.JDialog {

    /**
     * Creates new form ThemPhatSinhPhong
     */
    ThuPhiView home;
    private DAO controller = new DAO();
    List<Phong> rooms;
    List<PhatSinh> services;
    List<HoaDon> bills;
    List<PS_Phong> roomServices;

    public ThemPhatSinhPhong(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        home = (ThuPhiView) parent;
        services = controller.getListServices();
        bills = controller.getListBill();
        roomServices = controller.getListRoomServices();

        txt_so_luong.setEnabled(false);

        cb_phat_sinh.removeAllItems();

        for (PhatSinh service : services) {
            cb_phat_sinh.addItem(service.getTenPS().trim());
        }

        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");

        Date currentDate = java.util.Calendar.getInstance().getTime();

        txt_ngay_phat_sinh.setText(format.format(currentDate));

        txt_so_luong.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!((c >= '0') && (c <= '9')
                        || (c == KeyEvent.VK_BACK_SPACE)
                        || (c == KeyEvent.VK_DELETE))) {
                    getToolkit().beep();
                    e.consume();
                }
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb_phat_sinh = new javax.swing.JLabel();
        lb_phong = new javax.swing.JLabel();
        lb_ngay = new javax.swing.JLabel();
        lb_tong_tien = new javax.swing.JLabel();
        lb_so_luong = new javax.swing.JLabel();
        lb_day = new javax.swing.JLabel();
        cb_phat_sinh = new javax.swing.JComboBox<>();
        cb_phong = new javax.swing.JComboBox<>();
        cb_day = new javax.swing.JComboBox<>();
        txt_ngay_phat_sinh = new javax.swing.JTextField();
        txt_so_luong = new javax.swing.JTextField();
        lb_don_vi_tinh = new javax.swing.JLabel();
        btn_cancel = new javax.swing.JLabel();
        btn_save = new javax.swing.JLabel();
        lb_tong = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_phat_sinh.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb_phat_sinh.setText("Phát sinh:");
        getContentPane().add(lb_phat_sinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, -1, -1));

        lb_phong.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb_phong.setText("Phòng:");
        getContentPane().add(lb_phong, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 120, -1, -1));

        lb_ngay.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb_ngay.setText("Ngày phát sinh:");
        getContentPane().add(lb_ngay, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, -1, -1));

        lb_tong_tien.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb_tong_tien.setText("Tổng tiền:");
        getContentPane().add(lb_tong_tien, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 480, -1, -1));

        lb_so_luong.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb_so_luong.setText("Số lượng:");
        getContentPane().add(lb_so_luong, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, -1, -1));

        lb_day.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb_day.setText("Dãy:");
        getContentPane().add(lb_day, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, -1, -1));

        cb_phat_sinh.setBackground(new java.awt.Color(255, 204, 51));
        cb_phat_sinh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cb_phat_sinh.setForeground(new java.awt.Color(0, 51, 255));
        cb_phat_sinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default" }));
        cb_phat_sinh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cb_phat_sinh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cb_phat_sinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_phat_sinhActionPerformed(evt);
            }
        });
        getContentPane().add(cb_phat_sinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, 220, -1));

        cb_phong.setBackground(new java.awt.Color(255, 204, 51));
        cb_phong.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cb_phong.setForeground(new java.awt.Color(0, 51, 255));
        cb_phong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default" }));
        cb_phong.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cb_phong.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(cb_phong, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 120, -1, -1));

        cb_day.setBackground(new java.awt.Color(255, 204, 51));
        cb_day.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cb_day.setForeground(new java.awt.Color(0, 51, 255));
        cb_day.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "I", "J", "H", "Q", "M", "N", "K", "P" }));
        cb_day.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cb_day.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cb_day.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_dayActionPerformed(evt);
            }
        });
        getContentPane().add(cb_day, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, -1, -1));

        txt_ngay_phat_sinh.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_ngay_phat_sinh.setOpaque(false);
        getContentPane().add(txt_ngay_phat_sinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, 190, -1));

        txt_so_luong.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txt_so_luong.setText("\n");
        txt_so_luong.setOpaque(false);
        txt_so_luong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_so_luongActionPerformed(evt);
            }
        });
        txt_so_luong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_so_luongKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_so_luongKeyReleased(evt);
            }
        });
        getContentPane().add(txt_so_luong, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 80, -1));

        lb_don_vi_tinh.setText("m3");
        getContentPane().add(lb_don_vi_tinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 280, -1, 20));

        btn_cancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_cancelMouseClicked(evt);
            }
        });
        getContentPane().add(btn_cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 540, 75, 35));

        btn_save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_saveMouseClicked(evt);
            }
        });
        getContentPane().add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 540, 80, 35));

        lb_tong.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        lb_tong.setForeground(new java.awt.Color(51, 51, 255));
        getContentPane().add(lb_tong, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 480, 170, 20));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlyktx/images/Them_thong_tin_ps_phong.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        setSize(new java.awt.Dimension(500, 600));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_cancelMouseClicked
        this.dispose();
    }//GEN-LAST:event_btn_cancelMouseClicked

    private void btn_saveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_saveMouseClicked
        System.out.println("0");
        if (checkEmpty(cb_day.getSelectedItem().toString(), "Tên phat sinh?")
                && !cb_day.getSelectedItem().toString().trim().equals("Default")
                && checkEmpty(cb_phong.getSelectedItem().toString(), "Phòng?")
                && checkEmpty(cb_phat_sinh.getSelectedItem().toString(), "Phát sinh?")
                && !cb_phat_sinh.getSelectedItem().toString().trim().equals("Default")) {
            System.out.println("1");
            try {

                SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
                String kt = checkHoaDonExit(cb_phong.getSelectedItem().toString().trim(), txt_ngay_phat_sinh.getText().toString().trim(), cb_phat_sinh.getSelectedItem().toString().trim());
                System.out.println(kt);
                if (kt != null) {
                    String maHD = checkHoaDonExit(cb_phong.getSelectedItem().toString().trim(), txt_ngay_phat_sinh.getText().toString().trim(), cb_phat_sinh.getSelectedItem().toString().trim());
                    roomServices = controller.getListRoomServices();
                    System.out.println("2");
                    int t = roomServices.size() + 1;
                    String maPSPhong = (roomServices.size() < 10 ? "PSP0" : "PSP") + t;
                    String maps = services.get(cb_phat_sinh.getSelectedIndex()).getMaPS().trim();
                    PS_Phong pS_Phong = new PS_Phong(
                            maPSPhong,
                            maHD,
                            maps,
                            format.parse(txt_ngay_phat_sinh.getText().toString().trim()),
                            Integer.parseInt(txt_so_luong.getText().trim())
                    );

                    if (controller.addPSPhong(pS_Phong)) {
                        System.out.println("3");
                        JOptionPane.showMessageDialog(rootPane, "Thêm phát sinh thành công.");
                        home.updateTableBills();
                        this.dispose();
                    }
//                }else if (kt == "not alow") {
//                    JOptionPane.showMessageDialog(rootPane, "Thêm phát sinh thất bại.");
//                    this.dispose();
                } else {
                    HoaDon hd = new HoaDon();
                    int k = bills.size() + 1;

                    String maHD = (bills.size() < 10 ? "HD0" : "HD") + k;
                    System.out.println(maHD + "            " + bills.size());
                    hd.setMaHD(maHD);
                    hd.setMaPhong(cb_phong.getSelectedItem().toString().trim());
                    hd.setTongTien(0);
                    hd.setNgayTaoHD(format.parse(txt_ngay_phat_sinh.getText().toString().trim()));
                    if (controller.addBill(hd)) {
                        System.out.println("2");
                        int t = roomServices.size() + 1;
                        String maPSPhong = (roomServices.size() < 10 ? "PSP0" : "PSP") + t;
                        String maps = services.get(cb_phat_sinh.getSelectedIndex()).getMaPS().trim();
                        PS_Phong pS_Phong = new PS_Phong(
                                maPSPhong,
                                maHD,
                                maps,
                                format.parse(txt_ngay_phat_sinh.getText().toString().trim()),
                                Integer.parseInt(txt_so_luong.getText().trim())
                        );

                        if (controller.addPSPhong(pS_Phong)) {
                            System.out.println("3");
                            JOptionPane.showMessageDialog(rootPane, "Thêm phát sinh thành công.");
                            home.updateTableBills();
                            this.dispose();
                        }
                    }
                }

            } catch (ParseException ex) {
                Logger.getLogger(ThemPhatSinhPhong.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btn_saveMouseClicked

    private void cb_dayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_dayActionPerformed
        String maDay = cb_day.getSelectedItem().toString().trim();

        if (!maDay.equals("Default")) {
            cb_phong.setEnabled(true);
            rooms = controller.getListRoomByIDRange(maDay);
            cb_phong.removeAllItems();

            for (Phong room : rooms) {
                cb_phong.addItem(room.getMaPhong());
            }
        } else {
            cb_phong.setEnabled(false);
        }
    }//GEN-LAST:event_cb_dayActionPerformed

    private void cb_phat_sinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_phat_sinhActionPerformed
        txt_so_luong.setEnabled(true);
        int index = cb_phat_sinh.getSelectedIndex();
        if (index != -1) {
            lb_don_vi_tinh.setText(services.get(index).getDonViTinh().trim());
        }

        if (!txt_so_luong.getText().trim().isEmpty()) {
            DecimalFormat formatter = new DecimalFormat("###,###,###");
            int gia = services.get(cb_phat_sinh.getSelectedIndex()).getGiaTienPS() * Integer.parseInt(txt_so_luong.getText().trim());
            lb_tong.setText("");
            lb_tong.setText(formatter.format(gia) + " vnđ");
        } else {
            lb_tong.setText("");
        }
    }//GEN-LAST:event_cb_phat_sinhActionPerformed

    private void txt_so_luongKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_so_luongKeyPressed
//        if (!txt_so_luong.getText().trim().isEmpty()) {
//            DecimalFormat formatter = new DecimalFormat("###,###,###");
//            int gia = services.get(cb_phat_sinh.getSelectedIndex()).getGiaTienPS() * Integer.parseInt(txt_so_luong.getText().trim());
//            lb_tong.setText(formatter.format(gia) + " vnđ");
//        }
    }//GEN-LAST:event_txt_so_luongKeyPressed

    private void txt_so_luongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_so_luongActionPerformed
//        if (!txt_so_luong.getText().trim().isEmpty()) {
//            DecimalFormat formatter = new DecimalFormat("###,###,###");
//            int gia = services.get(cb_phat_sinh.getSelectedIndex()).getGiaTienPS() * Integer.parseInt(txt_so_luong.getText().trim());
//            lb_tong.setText(formatter.format(gia) + " vnđ");
//        }
    }//GEN-LAST:event_txt_so_luongActionPerformed

    private void txt_so_luongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_so_luongKeyReleased
        if (!txt_so_luong.getText().trim().isEmpty()) {
            DecimalFormat formatter = new DecimalFormat("###,###,###");
            int gia = services.get(cb_phat_sinh.getSelectedIndex()).getGiaTienPS() * Integer.parseInt(txt_so_luong.getText().trim());
            lb_tong.setText("");
            lb_tong.setText(formatter.format(gia) + " vnđ");
        } else {
            lb_tong.setText("");
        }
    }//GEN-LAST:event_txt_so_luongKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThemPhatSinhPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThemPhatSinhPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThemPhatSinhPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThemPhatSinhPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ThemPhatSinhPhong dialog = new ThemPhatSinhPhong(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public String checkHoaDonExit(String maPhong, String ngayTao, String tenSP) {
        bills = controller.getListBill();
        SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        String maPS = services.get(cb_phat_sinh.getSelectedIndex()).getMaPS().toString().trim();
        for (HoaDon bill : bills) {

            try {
                System.out.println(maPhong.equals(bill.getMaPhong().trim()) + "___" + checkThoiHan(bill.getNgayTaoHD(), addDays(bill.getNgayTaoHD(), 30), format.parse(ngayTao)));
                if (maPhong.equals(bill.getMaPhong().trim())) {
                    //System.out.println(checkMaPsPhong(maPS) + " fwfw   "+maPS);
                    if (checkThoiHan(bill.getNgayTaoHD(), addDays(bill.getNgayTaoHD(), 30), format.parse(ngayTao)) || checkMaPsPhong(maPS, bill.getMaHD())) {
                        System.out.println(checkMaPsPhong(maPS, bill.getMaHD())+"  rrgt5");
                        if (checkMaPsPhong(maPS, bill.getMaHD())) {
                            return bill.getMaHD();
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Phát sinh đã được thêm trong tháng này!");
                        return "not alow";
                    }
                }
            } catch (ParseException ex) {
                Logger.getLogger(ThemPhatSinhPhong.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        return null;
    }

    public boolean checkMaPsPhong(String maPs, String maHD) {
        roomServices = controller.getListRoomServices();
        for (PS_Phong roomService : roomServices) {
            System.out.println(maHD.equals(roomService.getMaHD().trim())+ " _____ safv");
            if (maHD.equals(roomService.getMaHD().trim())) {
                if (maPs.equals(roomService.getMaPS())) {
                    return false;
                }
            }
        }

        return true;
    }

    public static Date addDays(Date date, int days) {
        Calendar cal = Calendar.getInstance();
        cal.setTime(date);
        cal.add(Calendar.DATE, days); //minus number would decrement the days
        return cal.getTime();
    }

    boolean checkThoiHan(Date ngayDangKy, Date ngayKetThuc, Date dayCheck) {

        Date todayDate = dayCheck;
        if (!ngayDangKy.after(todayDate) && !ngayKetThuc.before(todayDate)) {
            return false;
        }
        return true;
    }

    public boolean checkEmpty(String key, String notify) {
        if (key.trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, notify);
            return false;
        }
        return true;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btn_cancel;
    private javax.swing.JLabel btn_save;
    private javax.swing.JComboBox<String> cb_day;
    private javax.swing.JComboBox<String> cb_phat_sinh;
    private javax.swing.JComboBox<String> cb_phong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lb_day;
    private javax.swing.JLabel lb_don_vi_tinh;
    private javax.swing.JLabel lb_ngay;
    private javax.swing.JLabel lb_phat_sinh;
    private javax.swing.JLabel lb_phong;
    private javax.swing.JLabel lb_so_luong;
    private javax.swing.JLabel lb_tong;
    private javax.swing.JLabel lb_tong_tien;
    private javax.swing.JTextField txt_ngay_phat_sinh;
    private javax.swing.JTextField txt_so_luong;
    // End of variables declaration//GEN-END:variables
}
